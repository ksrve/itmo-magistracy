package ksrve.model.entity;

import jakarta.persistence.*;
import ksrve.model.dto.EmployeeDTO;
import lombok.*;

import java.util.Date;

/**
 * Entity class representing an Employee in the system.
 * <p>
 * This class is mapped to the "employee" table in the database and
 * contains fields related to employee details such as first name,
 * last name, email, department, and hire date.
 * </p>
 */
@ToString
@RequiredArgsConstructor
@AllArgsConstructor
@Builder
@Getter
@Setter
@Entity(name="employee")
public class Employee {

    /**
     * Unique identifier for the Employee.
     * This is the primary key for the employee entity,
     * which is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "employee_id_seq")
    @SequenceGenerator(name = "employee_id_seq", sequenceName = "employee_id_seq", allocationSize = 1)
    @Column(name = "id")
    private Integer id;

    /**
     * First name of the Employee.
     * This field stores the employee's first name.
     */
    @Column(name = "first_name")
    private String firstName;

    /**
     * Last name of the Employee.
     * This field stores the employee's last name.
     */
    @Column(name = "last_name")
    private String lastName;

    /**
     * Email address of the Employee.
     * This field stores the employee's email address.
     */
    @Column(name = "email")
    private String email;

    /**
     * Department in which the Employee works.
     * This field represents the department associated with the employee.
     */
    @Column(name = "department")
    private String department;

    /**
     * Date the Employee was hired.
     * This field indicates when the employee was hired, stored as a Date object.
     */
    @Column(name = "hire_date")
    private Date hireDate;

    /**
     * Maps this Employee entity to an EmployeeDTO.
     * <p>
     * This method allows conversion from the Entity representation
     * to a Data Transfer Object, making it easy to transmit
     * relevant employee information within the application layer.
     * </p>
     *
     * @return an EmployeeDTO object containing employee details.
     */
    public EmployeeDTO mapToDTO() {
        return new EmployeeDTO(this);
    }
}