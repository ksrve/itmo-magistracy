<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
          <groupId>ksrve</groupId>
          <artifactId>lab1</artifactId>
          <version>1.0.0</version>
    </parent>

    <artifactId>server</artifactId>
    <packaging>war</packaging>

    <properties>
        <main.basedir>${project.parent.basedir}</main.basedir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Command Line Interface wrapper -->
        <!-- https://mvnrepository.com/artifact/com.beust/jcommander -->
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
        <!-- /Command Line Interface wrapper -->

        <!-- Lombok -->
        <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- /Lombok -->

        <!-- Logging -->
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <!-- Logging -->

        <!-- JAX-WS -->
        <!-- https://mvnrepository.com/artifact/jakarta.xml.ws/jakarta.xml.ws-api -->
        <dependency>
            <groupId>jakarta.xml.ws</groupId>
            <artifactId>jakarta.xml.ws-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.ws/jaxws-rt -->
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.ws/rt-->
        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>rt</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl -->
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
        </dependency>
        <!-- /JAX-WS -->

        <!-- Weld for CDI -->
        <!-- https://mvnrepository.com/artifact/org.jboss.weld.se/weld-se-core -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.servlet</groupId>
            <artifactId>weld-servlet-shaded</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
        </dependency>
        <!-- /Weld for CDI -->

        <!-- Jakarta -->
        <!-- https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jakarta.data/jakarta.data-api -->
        <dependency>
            <groupId>jakarta.data</groupId>
            <artifactId>jakarta.data-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jakarta.inject/jakarta.inject-api -->
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jakarta.ejb/jakarta.ejb-api -->
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <!-- /Jakarta -->

        <!-- Hibernate -->
        <!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core -->
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <!-- /Hibernate -->

        <!-- Database Driver -->
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <!-- /Database Driver -->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-io -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!-- Generate WSDL client classes -->
            <plugin>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>wsimport</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>wsgen</goal>
                        </goals>
                        <configuration>
                            <sei>ksrve.service.EmployeeServiceImpl</sei>
                            <genWsdl>true</genWsdl>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- /Generate WSDL client classes -->


            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <!-- Copy generated WSDL to META-INF/wsdl-->
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/META-INF/wsdl</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.build.directory}/generated-sources/wsdl</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- /Copy generated WSDL to META-INF/wsdl-->
                </executions>
            </plugin>


            <!-- Index bean -->
            <plugin>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>package</phase>
                        <id>uberjar-index</id>
                        <goals>
                            <goal>jandex-jar</goal>
                        </goals>
                        <configuration>
                            <jar>${project.build.directory}/${project.build.finalName}.jar</jar>
                            <includes>
                                <include>ksrve/**/*.class</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- /Index bean -->

            <!-- Building package to WAR-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <outputFileNameMapping>@{artifactId}@.@{extension}@</outputFileNameMapping>
                    <attachClasses>false</attachClasses>
                    <packagingExcludes>
                        WEB-INF/classes/ksrve/Main,
                        WEB-INF/classes/ksrve/Args,
                        WEB-INF/lib/weld-*.jar
                    </packagingExcludes>
                </configuration>
            </plugin>

            <!-- Building package to JAR-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <archive>
                        <manifest>
                            <mainClass>ksrve.Main</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Read properties file -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <files>
                        <file>src/main/resources/configuration.properties</file>
                    </files>
                    <properties/>
                </configuration>
            </plugin>
            <!-- /Read properties file -->

            <!-- Deployment -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <hostname>${server.host}</hostname>
                    <port>${server.port}</port>
                    <username>${server.username}</username>
                    <password>${server.password}</password>
                    <commands>
                        <!-- Set system property for application database config -->
                        <command>
                            /system-property=DB_JNDI_NAME:write-attribute(name="value",value="java:global/${db.name}")
                            /system-property=DB_HOST:write-attribute(name="value",value="0.0.0.0")
                            /system-property=DB_USERNAME:write-attribute(name="value",value="${db.username}")
                            /system-property=DB_PASSWORD:write-attribute(name="value",value="${db.password}")
                        </command>
                    </commands>
                </configuration>
                <executions>
                    <!-- Deploy the JDBC library -->
                    <execution>
                        <id>deploy-driver</id>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy-artifact</goal>
                        </goals>
                        <configuration>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <name>postgresql.jar</name>
                        </configuration>
                    </execution>

                    <!-- Add a data source -->
                    <execution>
                        <id>add-datasource</id>
                        <phase>install</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <address>subsystem=datasources,data-source=java:global/${db.name}</address>
                            <force>true</force>
                            <resources>
                                <resource>
                                    <properties>
                                        <jta>false</jta>
                                        <jndi-name>java:global/db</jndi-name>
                                        <enabled>true</enabled>
                                        <connection-url>jdbc:postgresql://${db.host}:${db.port}/${db.name}</connection-url>
                                        <driver-class>org.postgresql.Driver</driver-class>
                                        <driver-name>postgresql.jar</driver-name>
                                        <user-name>${db.username}</user-name>
                                        <password>${db.password}</password>
                                    </properties>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>deploy</id>
                        <phase>install</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- /Deployment -->

        </plugins>
    </build>

</project>